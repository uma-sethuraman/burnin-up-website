{"version":3,"sources":["assets/CaitlinLien.JPG","assets/caitlin-o-headshot.jpeg","assets/cherry.jpeg","assets/LaurenMangibin-headshot.jpg","assets/samantha-headshot.jpg","assets/uma-headshot.jpg","serviceWorker.ts","views/components/OurNavbar.tsx","views/components/LandingPage/LandingPage.tsx","views/App.tsx","views/Countries.tsx","views/CountryAPI.tsx","views/About.tsx","index.tsx","assets/austin-capitol.jpg","assets/beijing-skyline.jpg","assets/landing-bg.jpg","assets/world-map.jpeg"],"names":["module","exports","Boolean","window","location","hostname","match","OurNavbar","className","Navbar","bg","variant","Brand","href","Nav","Link","LandingPage","style","color","Image","src","require","height","Button","App","useState","currentTest","setCurrentTest","useEffect","fetch","then","res","json","data","test","Countries","CountryIncome","CountryRegion","CountryAPI","axios","get","r","countries","JSON","stringify","About","commitsCL","changeCommitsCL","commitsCO","changeCommitsCO","commitsCS","changeCommitsCS","commitsLM","changeCommitsLM","commitsST","changeCommitsST","commitsUS","changeCommitsUS","statsCL","changeStatsCL","statsCO","changeStatsCO","statsCS","changeStatsCS","statsLM","changeStatsLM","statsST","changeStatsST","statsUS","changeStatsUS","response","allCommits","elem","email","commits","catch","error","console","log","toJSON","reqCL","reqCO","reqCS","reqLM","reqST","reqUS","all","spread","responseCL","parse","statistics","counts","responseCO","responseCS","responseLM","responseST","responseUS","errors","issuesApiRequest","roundedCircle","ReactDOM","render","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fa60e2a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CaitlinLien.c5a77c5e.JPG\";","module.exports = __webpack_public_path__ + \"static/media/caitlin-o-headshot.d50ebd94.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cherry.0677d17d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/LaurenMangibin-headshot.070c9602.jpg\";","module.exports = __webpack_public_path__ + \"static/media/samantha-headshot.823dbb57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uma-headshot.181cf0ee.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\n\nfunction OurNavbar() {\n    return (\n        <div className=\"OurNavbar\">\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"/landing\">Burnin Up</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/about\">About Us</Nav.Link>\n                <Nav.Link href=\"/cities\">Cities</Nav.Link>\n                <Nav.Link href=\"/countries\">Countries</Nav.Link>\n                <Nav.Link href=\"/climatechange\">Climate Change</Nav.Link>\n                </Nav>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default OurNavbar;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Image from \"react-bootstrap/Image\"; \nimport './LandingPage.css';\n\nfunction LandingPage() {\n    return (\n        <div className=\"Landing\">\n            <header className=\"Landing-header\">\n                <div className=\"hook\">\n                <h3> Our world is burning up. </h3>\n                <h2>it's \"burning up, burning up for you baby.\" - Jonas Brothers </h2>\n                </div>\n            </header>\n            <body className=\"Landing-body\">\n                <div className=\"explore\">\n                <h3 style={{ color: 'white' }}>Explore</h3>\n                <div className=\"row\">\n                    <div className=\"column\">\n                    <Image src={require(\"../../../assets/austin-capitol.jpg\")} height=\"250\"/>\n                    <Button variant=\"outline-light\" href=\"/cities\">Cities</Button>{' '}\n                    </div>\n                    <div className=\"column\">\n                    <Image src={require(\"../../../assets/beijing-skyline.jpg\")} height=\"250\"/>\n                    <Button variant=\"outline-light\" href=\"/countries\">Countries</Button>{' '}\n                    </div>\n                    <div className=\"column\">\n                    <Image src={require(\"../../../assets/landing-bg.jpg\")} height=\"250\"/>\n                    <Button variant=\"outline-light\" href=\"/climateChange\">Climate Change</Button>{' '}\n                    </div>\n                </div>\n                </div>\n            </body>\n        </div>\n    );\n}\n\nexport default LandingPage;","import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from './components/OurNavbar';\nimport Image from \"react-bootstrap/Image\"; \nimport LandingPage from './components/LandingPage/LandingPage';\n\nfunction App() {\n\n  // trying to retrieve data from the backend server\n  const [currentTest, setCurrentTest] = useState(\"hi\");\n\n  useEffect(() => {\n      fetch('/test').then(res => res.json().then(data => {\n        setCurrentTest(data.test)\n      })\n    );\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <p> my message: {currentTest} </p>\n      <LandingPage />\n    </div>\n  );\n}\n\nexport default App;","import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport Image from \"react-bootstrap/Image\";\nimport Form from \"react-bootstrap/Form\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Navbar from \"./components/OurNavbar\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\nfunction Countries() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <header className=\"App-header\">\n        <h1>Countries</h1>\n        <Image src={require(\"../assets/world-map.jpeg\")} fluid />\n        <Form>\n          <Form.Group>\n            <Form>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"mr-sm-2\"\n              />\n              <Button variant=\"outline-info\">Search</Button>\n            </Form>\n            <>\n              <ButtonGroup>\n                <DropdownButton title={\"Income Level\"}>\n                  <Dropdown.Item eventKey=\"1\">High Income</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"2\">Middle Income</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"3\">Low Income</Dropdown.Item>\n                </DropdownButton>\n                <DropdownButton title={\"Region\"}>\n                  <Dropdown.Item eventKey=\"1\">Europe</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"2\">Asia</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"3\">Middle East</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"4\">North America</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"5\">South America</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"5\">Africa</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"5\">Australia</Dropdown.Item>\n                </DropdownButton>\n\n                <DropdownButton title={\"Capital City\"}>\n                  <Dropdown.Item eventKey=\"1\">A to Z</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"2\">Z to A</Dropdown.Item>\n                </DropdownButton>\n\n                <DropdownButton title={\"Average Temperature\"}>\n                  <Dropdown.Item eventKey=\"1\">Low</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"2\">Middle</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"3\">High</Dropdown.Item>\n                </DropdownButton>\n\n                <DropdownButton title={\"pm2.5\"}>\n                  <Dropdown.Item eventKey=\"1\">Low</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"2\">Middle</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"3\">High</Dropdown.Item>\n                </DropdownButton>\n              </ButtonGroup>\n            </>\n          </Form.Group>\n        </Form>\n        <Form></Form>\n        <Table striped bordered hover size=\"sm\" variant=\"dark\">\n          <thead>\n            <tr>\n              <th>Country</th>\n              <th>Income Level</th>\n              <th>Longitude</th>\n              <th>Latitude</th>\n              <th>Region</th>\n              <th>Capital City</th>\n              <th>Average Temperature</th>\n              <th>pm2.5</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <Link to=\"/countries/USA\"> United States</Link>\n              </td>\n              <td>High income</td>\n              <td>-77.032</td>\n              <td>38.8895</td>\n              <td>North America</td>\n              <td>Washington D.C</td>\n              <td>4.45</td>\n              <td>-4.2</td>\n            </tr>\n            <tr>\n              <td>\n                <Link to=\"/countries/China\"> China</Link>\n              </td>\n              <td>Upper Middle Income</td>\n              <td>116.286</td>\n              <td>40.0495</td>\n              <td>East Asia and Pacific</td>\n              <td>Beijing</td>\n              <td>3.45</td>\n              <td>400</td>\n            </tr>\n            <tr>\n              <td>\n                <Link to=\"/countries/France\"> France</Link>\n              </td>\n              <td>High Income</td>\n              <td>2.35097</td>\n              <td>48.8566</td>\n              <td>Europe & Central Asia</td>\n              <td>Paris</td>\n              <td>10.05</td>\n              <td>13077</td>\n            </tr>\n          </tbody>\n        </Table>\n      </header>\n    </div>\n  );\n}\n\nexport default Countries;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Countries from './Countries';\n\nfunction CountryAPI() {\n\n  const [currentTest, setCurrentTest] = useState<Countries>();\n\n  useEffect(() => {\n    axios\n    .get(\"/api/countries\").then(r => {\n      const countries:Countries = r.data as Countries;\n      setCurrentTest(countries);\n    })\n  }, []);\n\n  return (\n     <div>\n      <p> {JSON.stringify(currentTest)} </p>\n    </div>\n  );\n\n}\n\nexport interface Countries {\n  countries: Country[];\n}\n\nexport interface Country {\n  country_capital_city: string;\n  country_id:           number;\n  country_income:       CountryIncome;\n  country_iso2code:     string;\n  country_iso3code:     string;\n  country_name:         string;\n  country_region:       CountryRegion;\n}\n\nexport enum CountryIncome {\n  Aggregates = \"Aggregates\",\n  HighIncome = \"High income\",\n  LowIncome = \"Low income\",\n  LowerMiddleIncome = \"Lower middle income\",\n  UpperMiddleIncome = \"Upper middle income\",\n}\n\nexport enum CountryRegion {\n  Aggregates = \"Aggregates\",\n  EastAsiaPacific = \"East Asia & Pacific\",\n  EuropeCentralAsia = \"Europe & Central Asia\",\n  LatinAmericaCaribbean = \"Latin America & Caribbean \",\n  MiddleEastNorthAfrica = \"Middle East & North Africa\",\n  NorthAmerica = \"North America\",\n  SouthAsia = \"South Asia\",\n  SubSaharanAfrica = \"Sub-Saharan Africa \",\n}\n\nexport default CountryAPI;","import React from \"react\";\nimport \"./About.css\";\nimport Navbar from \"./components/OurNavbar\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport CountryAPI from './CountryAPI'\n\nfunction About() {\n\n  /* Commits per contributor from GitLab API */\n  const [commitsCL, changeCommitsCL] = useState(-1);\n  const [commitsCO, changeCommitsCO] = useState(-1);\n  const [commitsCS, changeCommitsCS] = useState(-1);\n  const [commitsLM, changeCommitsLM] = useState(-1);\n  const [commitsST, changeCommitsST] = useState(-1);\n  const [commitsUS, changeCommitsUS] = useState(-1);\n\n  /* Statistics for GitLab Issues from GitLab API */\n  const [statsCL, changeStatsCL] = useState(-1);\n  const [statsCO, changeStatsCO] = useState(-1);\n  const [statsCS, changeStatsCS] = useState(-1);\n  const [statsLM, changeStatsLM] = useState(-1);\n  const [statsST, changeStatsST] = useState(-1);\n  const [statsUS, changeStatsUS] = useState(-1);\n\n  /* Retrieves data about GitLab issues per contributor */\n  function issuesApiRequest() {\n\n    /* Requests for all contributors */\n    const reqCL = axios.get(\"https://gitlab.com/api/v4/projects/21349576/issues_statistics?author_username=caitlinlien\");\n    const reqCO = axios.get(\"https://gitlab.com/api/v4/projects/21349576/issues_statistics?author_username=caitlinocallaghan\");\n    const reqCS = axios.get(\"https://gitlab.com/api/v4/projects/21349576/issues_statistics?author_username=cherrysun9\");\n    const reqLM = axios.get(\"https://gitlab.com/api/v4/projects/21349576/issues_statistics?author_username=lauren.mangibin\");\n    const reqST = axios.get(\"https://gitlab.com/api/v4/projects/21349576/issues_statistics?author_username=samantha3pen\");\n    const reqUS = axios.get(\"https://gitlab.com/api/v4/projects/21349576/issues_statistics?author_username=uma-sethuraman\");\n    \n    /* Change statistics variables for all contributors */\n    axios.all([reqCL, reqCO, reqCS, reqLM, reqST, reqUS]).then(axios.spread((...responses) => {\n      const responseCL: Gitlab = JSON.parse(JSON.stringify(responses[0])) as Gitlab;\n      changeStatsCL(responseCL.data.statistics.counts.all);\n      const responseCO: Gitlab = JSON.parse(JSON.stringify(responses[1])) as Gitlab;\n      changeStatsCO(responseCO.data.statistics.counts.all);\n      const responseCS: Gitlab = JSON.parse(JSON.stringify(responses[2])) as Gitlab;\n      changeStatsCS(responseCS.data.statistics.counts.all);\n      const responseLM: Gitlab = JSON.parse(JSON.stringify(responses[3])) as Gitlab;\n      changeStatsLM(responseLM.data.statistics.counts.all);\n      const responseST: Gitlab = JSON.parse(JSON.stringify(responses[4])) as Gitlab;\n      changeStatsST(responseST.data.statistics.counts.all);\n      const responseUS: Gitlab = JSON.parse(JSON.stringify(responses[5])) as Gitlab;\n      changeStatsUS(responseUS.data.statistics.counts.all);\n    })).catch(errors => {\n      console.log(errors.toJSON());\n    })\n  }\n\n  /* Retrieves number of commits per contributor from GitLab API */\n  const commitsApiRequest = () => {\n    axios\n      .get(\n        \"https://gitlab.com/api/v4/projects/21349576/repository/contributors\"\n      )\n      .then((response) => {\n        const allCommits: CommitsInfo[] = response.data;\n\n        /* Iterate over all elements in the array and assign\n        each person's variable to their number of commits */\n        for (let elem of allCommits) {\n          if (elem.email === \"caitlinlien@utexas.edu\")\n            changeCommitsCL(elem.commits);\n          if (elem.email === \"caitlinocallaghan@Caitlins-MBP.lan\")\n            changeCommitsCO(elem.commits);\n          if (elem.email === \"cherrysun9@utexas.edu\")\n            changeCommitsCS(elem.commits);\n          if (elem.email === \"lauren.mangibin@gmail.com\")\n            changeCommitsLM(elem.commits);\n          if (elem.email === \"samtuapen@utexas.edu\")\n            changeCommitsST(elem.commits);\n          if (elem.email === \"uma.sethuraman@utexas.edu\")\n            changeCommitsUS(elem.commits);\n        }\n      })\n      .catch(function (error) {\n        console.log(error.toJSON());\n      })\n  };\n\n  return (\n    <div className=\"About\">\n      {commitsApiRequest()}\n      {issuesApiRequest()}\n      <Navbar />\n      <body className=\"About-body\">\n        <div className = \"h3_about\">\n          <h3>About Us</h3>\n        </div>\n        <div className=\"row\">\n          <div className=\"h2_about\">\n            <div className=\"column\">\n              <Image src={require(\"../assets/CaitlinLien.JPG\")} height=\"250\" roundedCircle/>\n              <h2><b>Caitlin Lien</b></h2>\n              <p>Issues: {statsCL}</p>\n              <p>Commits: {commitsCL}</p>\n              <p>Unit Tests: 0</p>\n            </div>\n            <div className=\"column\">\n              <Image src={require(\"../assets/caitlin-o-headshot.jpeg\")} height=\"250\" roundedCircle/>\n              <h2><b>Caitlin O'Callaghan</b></h2>\n              <p>Issues: {statsCO}</p>\n              <p>Commits: {commitsCO}</p>\n              <p>Unit Tests: 0</p>\n            </div>\n            <div className=\"column\">\n              <Image src={require(\"../assets/cherry.jpeg\")} height=\"250\" roundedCircle/>\n              <h2><b>Cherry Sun</b></h2>\n              <p>Issues: {statsCS}</p>\n              <p>Commits: {commitsCS}</p>\n              <p>Unit Tests: 0</p>\n            </div>\n            <div className=\"column\">\n              <Image src={require(\"../assets/LaurenMangibin-headshot.jpg\")} height=\"250\" roundedCircle/>\n              <h2><b>Lauren Mangibin</b></h2>\n              <p>Issues: {statsLM}</p>\n              <p>Commits: {commitsLM}</p>\n              <p>Unit Tests: 0</p>\n            </div>\n            <div className=\"column\">\n              <Image src={require(\"../assets/samantha-headshot.jpg\")} height=\"250\" roundedCircle/>\n              <h2><b>Samantha Tuapen</b></h2>\n              <p>Issues: {statsST}</p>\n              <p>Commits: {commitsST}</p>\n              <p>Unit Tests: 0</p>\n            </div>\n            <div className=\"column\">\n              <Image src={require(\"../assets/uma-headshot.jpg\")} height=\"250\" roundedCircle/>\n              <h2><b>Uma Sethuraman</b></h2>\n              <p>Issues: {statsUS}</p>\n              <p>Commits: {commitsUS}</p>\n              <p>Unit Tests: 0</p>\n            </div>\n          </div>\n        </div>\n        <div className = \"h2_about\"> \n          <br></br>\n          <h2><a href = \"https://documenter.getpostman.com/view/12123261/TVRdAWse\">Our Postman API</a></h2>\n          <br></br>\n          <h2><a href = \"https://gitlab.com/caitlinlien/cs373-sustainability/\">Our GitLab Repository</a></h2>\n          <br></br>\n        </div>\n      </body>\n      <CountryAPI/> \n    </div>\n  );\n}\n\nexport interface Gitlab {\n  data: Data;\n  status: number;\n  statusText: string;\n  headers: GITLABHeaders;\n  config: Config;\n  request: Request;\n}\n\nexport interface Config {\n  url: string;\n  method: string;\n  headers: ConfigHeaders;\n  transformRequest: null[];\n  transformResponse: null[];\n  timeout: number;\n  xsrfCookieName: string;\n  xsrfHeaderName: string;\n  maxContentLength: number;\n  maxBodyLength: number;\n}\n\nexport interface ConfigHeaders {\n  Accept: string;\n}\n\nexport interface Data {\n  statistics: Statistics;\n}\n\nexport interface Statistics {\n  counts: Counts;\n}\n\nexport interface Counts {\n  all: number;\n  closed: number;\n  opened: number;\n}\n\nexport interface CommitsInfo {\n  name:      string;\n  email:     string;\n  commits:   number;\n  additions: number;\n  deletions: number;\n}\n\nexport interface GITLABHeaders {\n  \"cache-control\": string;\n  \"content-type\": string;\n}\n\nexport interface Request {}\n\nexport default About;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//pages\nimport App from \"./views/App\";\nimport About from \"./views/About\";\nimport Cities from \"./views/Cities\";\nimport GeneralYears from \"./views/GeneralYears\";\nimport Year2013 from \"./views/Year2013\";\nimport Year2014 from \"./views/Year2014\";\nimport Year2015 from \"./views/Year2015\";\nimport Beijing from \"./views/Beijing\";\nimport Paris from \"./views/Paris\";\nimport Austin from \"./views/Austin\";\nimport Countries from \"./views/Countries\";\nimport USA from \"./views/USA\";\nimport China from \"./views/China\";\nimport France from \"./views/France\";\nimport CountryAPI from \"./views/CountryAPI\"\n\nReactDOM.render(\n  <Router>\n      <Route path=\"/about\" exact component = {About}/>\n      <Route path=\"/\" exact component = {App}/>\n      \n\n\n      {/* { <Route path=\"/landing\" render={(props) => <App />} /> }\n      <Route path=\"/countries/USA\" render={(props) => <USA />} />\n      <Route path=\"/countries/China\" render={(props) => <China />} />\n      <Route path=\"/countries/France\" render={(props) => <France />} />\n      <Route path=\"/cities/Beijing\" render={(props) => <Beijing />} />\n      <Route path=\"/cities/Paris\" render={(props) => <Paris />} />\n      <Route path=\"/cities/Austin\" render={(props) => <Austin />} />\n      <Route path=\"/cities\" render={(props) => <Cities />} />\n      <Route path=\"/climatechange/2013\" render={(props) => <Year2013 />} />\n      <Route path=\"/climatechange/2014\" render={(props) => <Year2014 />} />\n      <Route path=\"/climatechange/2015\" render={(props) => <Year2015 />} />\n      <Route path=\"/climatechange\" render={(props) => <GeneralYears />} />\n      <Route path=\"/countries\" render={(props) => <Countries />} />\n      <Route path=\"/CountryAPI\" render={(props) => <CountryAPI />} /> */} \n\n      {/* <Redirect to=\"/landing\" /> */}\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/austin-capitol.04cf081b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beijing-skyline.d7e9ea31.jpg\";","module.exports = __webpack_public_path__ + \"static/media/landing-bg.dae330c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/world-map.52a20450.jpeg\";"],"sourceRoot":""}